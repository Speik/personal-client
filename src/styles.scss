@tailwind base;
@tailwind components;
@tailwind utilities;

$break2xl: 1535px;
$breakxl: 1279px;
$breaklg: 1023px;
$breakmd: 767px;
$breaksm: 639px;
$breakxs: 475px;

@mixin font-title { font-family: 'Orbitron', sans-serif; }
@mixin font-default { font-family: 'Exo', sans-serif; }
@mixin bg-card {
  -webkit-backdrop-filter: blur(8px) !important;
  backdrop-filter: blur(8px) !important;
  background-color: rgba(50, 50, 50, 0.4) !important;
}

:root {
  --bg-default: #212121 !important;
  --bg-dark: #1d1a1a !important;
  --font-title: 'Orbitron', sans-serif;
  --font-default: 'Exo', sans-serif;
}

*,
::before,
::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

::selection {
  background-color: rgba(30, 255, 90, .2);
}

html, body {
  @include font-default;
  position: relative;
  min-height: 100%;
  height: 100%;
  scroll-behavior: smooth;
  background-color: var(--bg-default);
}

@keyframes rotation {
  from { transform: rotate(0deg); }
  to { transform: rotate(359deg); }
}

@keyframes blink {
  0% { opacity: 0; }
  25% { opacity: .5; }
  50% { opacity: 1; }
  75% { opacity: .5; }
  100% { opacity: 0; }
}

@keyframes pulse {
  0% {
    transform: scale(0.95);
    box-shadow: 0 0 0 0 rgba(#4cd07d, 0.7);
  }
  
  70% {
    transform: scale(1);
    box-shadow: 0 0 0 10px rgba(51, 217, 178, 0);
  }
  
  100% {
    transform: scale(0.95);
    box-shadow: 0 0 0 0 rgba(51, 217, 178, 0);
  }
}

.rotate { animation: rotation 16s infinite linear; }
.blink { animation: blink 3s infinite linear; }
.pulse { animation: pulse 2s infinite; }
.pause-animation { animation-play-state: paused; }

.font-title { @include font-title; }
.font-default { @include font-default; }

.bg-default { background-color: var(--bg-default) !important; }
.bg-dark { background-color: var(--bg-dark) !important; }
.bg-card { @include bg-card; }

.square {
  position: relative;

  &::after {
    content: '';
    display: block;
    padding-bottom: 100%;
  }

  .square-content {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
  }
}

.transparent-chip.p-chip { background-color: transparent !important; }

.details-button.used { animation: none; }

.fullscreen-dialog.p-dialog {
  width: 100% !important;
  height: 100% !important;
  max-height: 100% !important;

  .p-dialog-header {
    background-color: var(--bg-default);
    padding: 4rem;

    // SCSS doesn't compile with tailwind directives such as @apply,
    // so here is a crutch
    @media screen and (max-width: $breakxl) { padding: 3.5rem; }
    @media screen and (max-width: $breaklg) { padding: 3rem; }
    @media screen and (max-width: $breakmd) { padding: 2.5rem; }
    @media screen and (max-width: $breaksm) { padding: 2rem; }
    @media screen and (max-width: $breakxs) { padding: 1rem; }

    .p-dialog-header-icons {
      scale: 1.5;
    }
  }

  .p-dialog-content {
    background-color: var(--bg-default);
    padding: 0rem 4rem 4rem 4rem;

    @media screen and (max-width: $breakxl) { padding: 0 3.5rem 3.5rem 3.5rem; }
    @media screen and (max-width: $breaklg) { padding: 0 3rem 3rem 3rem; }
    @media screen and (max-width: $breakmd) { padding: 0 2.5rem 2.5rem 2.5rem; }
    @media screen and (max-width: $breaksm) { padding: 0 2rem 2rem 2rem; }
    @media screen and (max-width: $breakxs) { padding: 0 1rem 1rem 1rem; }
  }
}

.skill-progressbar.p-progressbar {
  .p-progressbar-value {
    background: var(--green-400);
  }
}

.p-sidebar-header {
  h2 {
    &::before {
      content: '';
      display: block;
      position: absolute;
      left: 0;
      top: 0;
      width: 2px;
      height: 100%;
      background-color: var(--green-400);
    }
  }

  .p-sidebar-close {
    scale: 1.35;
  }
}

.p-inline-message.p-inline-message-error {
  .p-inline-message-text { color: var(--red-300) !important; }
  .p-inline-message-icon { color: var(--red-300) !important; }
}